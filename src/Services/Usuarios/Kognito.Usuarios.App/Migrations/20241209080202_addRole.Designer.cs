// <auto-generated />
using System;
using Kognito.Usuarios.App.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kognito.Usuarios.App.Migrations
{
    [DbContext(typeof(UsuarioContext))]
    [Migration("20241209080202_addRole")]
    partial class addRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kognito.Usuarios.App.Domain.Emblemas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DesbloqueadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Emblemas");
                });

            modelBuilder.Entity("Kognito.Usuarios.App.Domain.Metas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Concluida")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ConcluidaEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadaEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Metas");
                });

            modelBuilder.Entity("Kognito.Usuarios.App.Domain.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CodigoPai")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CodigoPai");

                    b.Property<string>("CodigoRecuperacaoEmail")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("CodigoRecuperacaoEmail");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeCadastro");

                    b.Property<string>("Neurodivergencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Neurodivergencia");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Nome");

                    b.Property<int>("Ofensiva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ResponsavelEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ResponsavelEmail");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("TipoUsuario");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Kognito.Usuarios.App.Domain.Emblemas", b =>
                {
                    b.HasOne("Kognito.Usuarios.App.Domain.Usuario", null)
                        .WithMany("Emblemas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Kognito.Usuarios.App.Domain.Metas", b =>
                {
                    b.HasOne("Kognito.Usuarios.App.Domain.Usuario", null)
                        .WithMany("Metas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Kognito.Usuarios.App.Domain.Usuario", b =>
                {
                    b.OwnsOne("EstartandoDevsCore.ValueObjects.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("nvarchar(11)")
                                .HasColumnName("Cpf");

                            b1.HasKey("UsuarioId");

                            b1.HasIndex("Numero")
                                .IsUnique();

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("Kognito.Usuarios.App.Domain.Login", "Login", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Hash")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("LoginHash");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");

                            b1.OwnsOne("EstartandoDevsCore.ValueObjects.Email", "Email", b2 =>
                                {
                                    b2.Property<Guid>("LoginUsuarioId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Endereco")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)")
                                        .HasColumnName("Email");

                                    b2.HasKey("LoginUsuarioId");

                                    b2.ToTable("Usuarios");

                                    b2.WithOwner()
                                        .HasForeignKey("LoginUsuarioId");
                                });

                            b1.OwnsOne("EstartandoDevsCore.ValueObjects.Senha", "Senha", b2 =>
                                {
                                    b2.Property<Guid>("LoginUsuarioId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Valor")
                                        .HasMaxLength(1000)
                                        .HasColumnType("nvarchar(1000)")
                                        .HasColumnName("Senha");

                                    b2.HasKey("LoginUsuarioId");

                                    b2.ToTable("Usuarios");

                                    b2.WithOwner()
                                        .HasForeignKey("LoginUsuarioId");
                                });

                            b1.Navigation("Email")
                                .IsRequired();

                            b1.Navigation("Senha")
                                .IsRequired();
                        });

                    b.Navigation("Cpf")
                        .IsRequired();

                    b.Navigation("Login")
                        .IsRequired();
                });

            modelBuilder.Entity("Kognito.Usuarios.App.Domain.Usuario", b =>
                {
                    b.Navigation("Emblemas");

                    b.Navigation("Metas");
                });
#pragma warning restore 612, 618
        }
    }
}
